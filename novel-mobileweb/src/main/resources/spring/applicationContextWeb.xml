<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
	" >

	<context:component-scan base-package="com.aswishes.novel.mweb.controller"/>

	<!-- 允许访问/WebContent/static/目录下的任何资源文件.-->
	<mvc:resources mapping="/static/**" location="/static/" />
	<!-- 允许访问/WebContent下的.html文件(welcome.html); 如果为welcome.jsp, 则不用设置 -->
	<mvc:resources mapping="/*.html" location="/" />
	
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
	
	<!-- freemarker config -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths" value="/WEB-INF/view/, /"/>
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape"/>
			</map>
		</property>
		<property name="freemarkerSettings">
           <props>
                <prop key="template_update_delay">0</prop>
                <prop key="defaultEncoding">UTF-8</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="boolean_format">true,false</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="number_format">0.######</prop>
                <prop key="whitespace_stripping">true</prop>
                <!--空值处理-->
                <prop key="classic_compatible">true</prop>
                <!-- 
                <prop key="auto_import">/commons/header.ftl as p,/commons/storejoininheader.ftl as sp,/commons/store_joinin_left.ftl as sl</prop>
                 -->
           </props>
		</property>
	</bean>
	
	<!-- 
		View resolvers can also be configured with ResourceBundles or XML files. If you need
		different view resolving based on Locale, you have to use the resource bundle resolver.
	-->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true"/>
		<property name="prefix" value=""/>
		<property name="suffix" value=".ftl"/>
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="requestContextAttribute" value="rc" />
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 2GB -->
		<property name="maxUploadSize" value="2147483648"></property>
		<!--  
		<property name="uploadTempDir" value="/spring-upload/"></property>
		-->
		<property name="maxInMemorySize" value="4096"></property>
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 只过滤二级结构的请求, 如/firmware/upload等url请求, 不会过滤请求资源文件. -->
			<mvc:mapping path="/*/*"/>
			<!-- 需要 spring-mvc.xsd -->
			<mvc:exclude-mapping path="/book/*"/>
			<mvc:exclude-mapping path="/chapter/*"/>
			<bean class="com.aswishes.novel.mweb.common.web.LoginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>text/xml;charset=UTF-8</value>
						<value>text/javascript;charset=UTF-8</value>
						<value>text/plain;charset=UTF-8</value>
						<value>text/json;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
						<value>application/javascript;charset=UTF-8</value>
						<value>application/x-javascript;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
			<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

</beans>